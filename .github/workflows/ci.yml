name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Daily backup at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  # Code Quality Checks
  quality:
    runs-on: ubuntu-latest
    name: Code Quality
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js (if needed)
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
        if: hashFiles('package.json') != ''

      - name: Install dependencies
        run: |
          if [ -f package.json ]; then
            npm ci
          fi
        if: hashFiles('package.json') != ''

      - name: Run linting
        run: |
          if [ -f package.json ] && npm run lint --if-present; then
            echo "Linting completed"
          else
            echo "No linting configuration found"
          fi
        continue-on-error: false

      - name: Run tests
        run: |
          if [ -f package.json ] && npm test --if-present; then
            echo "Tests completed"
          else
            echo "No tests found"
          fi
        continue-on-error: false

  # Security Scanning
  security:
    runs-on: ubuntu-latest
    name: Security Scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security audit
        run: |
          if [ -f package.json ]; then
            npm audit --audit-level=high
          fi
        continue-on-error: true

      - name: CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, python, java, csharp, cpp, go
        continue-on-error: true

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        continue-on-error: true

  # Automated Backup
  backup:
    runs-on: ubuntu-latest
    name: Automated Backup
    if: github.event_name == 'schedule'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create backup tag
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          BACKUP_TAG="backup-$(date +%Y%m%d-%H%M%S)"
          git tag $BACKUP_TAG
          git push origin $BACKUP_TAG
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Build and Deploy (if applicable)
  build:
    runs-on: ubuntu-latest
    name: Build
    needs: [quality, security]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js (if needed)
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
        if: hashFiles('package.json') != ''

      - name: Install dependencies
        run: |
          if [ -f package.json ]; then
            npm ci
          fi
        if: hashFiles('package.json') != ''

      - name: Build project
        run: |
          if [ -f package.json ] && npm run build --if-present; then
            echo "Build completed"
          else
            echo "No build script found"
          fi

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
        if: success()

  # Notification
  notify:
    runs-on: ubuntu-latest
    name: Notify
    needs: [quality, security, build]
    if: always()
    steps:
      - name: Notify on success
        if: needs.quality.result == 'success' && needs.security.result == 'success'
        run: echo "✅ All checks passed successfully!"

      - name: Notify on failure
        if: needs.quality.result == 'failure' || needs.security.result == 'failure'
        run: echo "❌ Some checks failed. Please review the logs."